{
	"name": "output_fail",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "synspjarvisprd",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a4d4c911-3725-4229-a43c-e38b782cce45"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/71cc41f4-8e37-4c60-abbb-b9003b91c554/resourceGroups/rg-jarvis-production/providers/Microsoft.Synapse/workspaces/syn-tlf-jarvis-prod/bigDataPools/synspjarvisprd",
				"name": "synspjarvisprd",
				"type": "Spark",
				"endpoint": "https://syn-tlf-jarvis-prod.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synspjarvisprd",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from azure.eventhub import EventData\r\n",
					"from azure.eventhub import EventHubProducerClient\r\n",
					"from pyspark.sql.functions import col\r\n",
					"from datetime import datetime, timezone\r\n",
					"import json"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"current_ts_new = \"2023-02-23T14:51:16\"\r\n",
					"num_processo_new = \"10217/2017--148\"\r\n",
					"cod_calendars_new = \"[157,158,159]\"\r\n",
					"idProcess_new = \"1030\"\r\n",
					"is_process_new = True\r\n",
					"idUser_new = \"80318556\""
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"current_ts = current_ts_new.replace(\"\\\"\",\"\")\r\n",
					"cod_calendars = cod_calendars_new.replace(\"[\",\"\")\\\r\n",
					"                                 .replace(\"]\",\"\")\r\n",
					"idProcess = idProcess_new.replace(\"\\\"\",\"\")\r\n",
					"is_process = is_process_new\r\n",
					"idUser = idUser_new.replace(\"\\\"\",\"\")\r\n",
					"num_processo = num_processo_new.replace(\"\\\"\",\"\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"env = mssparkutils.env.getWorkspaceName()\r\n",
					"if(env == 'syn-tlf-jarvis-prod'):\r\n",
					"    sqlWorkspaceName = \"syndpjarvisprod\"\r\n",
					"    akv_name = \"kv-tlf-jarvis-prod\"\r\n",
					"elif(env == 'syn-tlf-jarvis-test'):\r\n",
					"    sqlWorkspaceName = 'syndpjarvistest'\r\n",
					"    akv_name = \"kv-tlf-jarvis-test\"\r\n",
					"else:\r\n",
					"    sqlWorkspaceName = 'syndpjarvisdev'\r\n",
					"    akv_name = \"kv-tlf-jarvis-dev\"\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"source": [
					"linked_service_akv = \"AzureKeyVault\"\r\n",
					"\r\n",
					"path_write = TokenLibrary.getSecret(akv_name, \"bloburl\", linked_service_akv) + \"_r4\"\r\n",
					"generated = str(datetime.now(timezone.utc).strftime('%Y-%m-%d_%H-%M-%S'))\r\n",
					"generated2 = str(datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S-03:00'))\r\n",
					"\r\n",
					"eventhub_connection = TokenLibrary.getSecret(akv_name, \"eventhubfile\", linked_service_akv)\r\n",
					"eventhub_output = TokenLibrary.getSecret(akv_name, \"ehoutput\", linked_service_akv)\r\n",
					"\r\n",
					"path_response = f\"{path_write}/{idUser}/{idProcess}_{generated}\""
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"response = {\r\n",
					"            \"status\": \"ERROR\",\r\n",
					"            \"id\": idProcess,\r\n",
					"            \"path\": path_response,\r\n",
					"            \"is_process\": is_process,\r\n",
					"            \"end_time\": generated2,\r\n",
					"            \"userid\": idUser,\r\n",
					"            \"num_processo\": num_processo,\r\n",
					"            \"cod_calendars\": cod_calendars,\r\n",
					"            \"eventType\": \"EXPORT_REPORT_CONTINGENCY\"\r\n",
					"            }\r\n",
					"s = json.dumps(response) # Convert the reading into a JSON string.\r\n",
					"\r\n",
					"producer = EventHubProducerClient.from_connection_string(\r\n",
					"    conn_str=eventhub_connection, consumer_group=\"$Default\", eventhub_name=eventhub_output\r\n",
					")\r\n",
					"\r\n",
					"event_data_batch = producer.create_batch()\r\n",
					"event_data_batch.add(EventData(s)) # Add event data to the batch.\r\n",
					"producer.send_batch(event_data_batch) # Send the batch of events to the event hub.\r\n",
					"\r\n",
					"# Close the producer.    \r\n",
					"producer.close()"
				],
				"execution_count": 13
			}
		]
	}
}