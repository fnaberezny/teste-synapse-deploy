{
	"name": "photographsLoadDefinition",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "synspjarvisprd",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "5111e72e-9981-4f7b-9088-0330e8a360db"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/71cc41f4-8e37-4c60-abbb-b9003b91c554/resourceGroups/rg-jarvis-production/providers/Microsoft.Synapse/workspaces/syn-tlf-jarvis-prod/bigDataPools/synspjarvisprd",
				"name": "synspjarvisprd",
				"type": "Spark",
				"endpoint": "https://syn-tlf-jarvis-prod.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synspjarvisprd",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"// Import Spark Libraries\r\n",
					"import org.apache.spark.sql.functions.{col, lit, struct, to_timestamp}\r\n",
					"\r\n",
					"// Define Variables\r\n",
					"val containerTarget = \"photographs\"\r\n",
					"val linkedService = \"CosmosDb\"\r\n",
					"val sqlWorkspaceName = \"syndpjarvisprod\"\r\n",
					"\r\n",
					"// Read Fotografias Possiveis From SQL Dedicated\r\n",
					"val dfTbFotografiasPossiveis = spark\r\n",
					".read\r\n",
					".synapsesql(\r\n",
					"    s\"$sqlWorkspaceName.Silver.fotografias_possiveis\"\r\n",
					"    )\r\n",
					"\r\n",
					"val dfTbCalendarioMonetario = spark\r\n",
					".read\r\n",
					".synapsesql(\r\n",
					"    s\"$sqlWorkspaceName.Silver.calendario_monetario_p3\"\r\n",
					"    )\r\n",
					"\r\n",
					"// Read Photographs From CosmosDb\r\n",
					"val dfTbPhotographs = spark.read\r\n",
					"        .format(\"cosmos.oltp\")\r\n",
					"        .option(\"spark.synapse.linkedService\", linkedService)\r\n",
					"        .option(\"spark.cosmos.container\", containerTarget)\r\n",
					"        .load()\r\n",
					"\r\n",
					"// Select Columns From CosmosDB\r\n",
					"val dfSelected = dfTbPhotographs.select(\"id\",\r\n",
					"                                        \"cod_fotografia\",\r\n",
					"                                        \"divisao.cod_divisao_processo\",\r\n",
					"                                        \"escritorio.sig_escritorio_contratado\",\r\n",
					"                                        \"calendario_monetario.cod_calendario_monetario\",\r\n",
					"                                        \"status\"\r\n",
					"                                        )\r\n",
					"\r\n",
					"// Create TempViews\r\n",
					"dfTbFotografiasPossiveis.createOrReplaceTempView(\"fotografias_possiveis\")\r\n",
					"dfSelected.createOrReplaceTempView(\"photographs\")\r\n",
					"dfTbCalendarioMonetario.createOrReplaceTempView(\"calendario_monetario_p3\")\r\n",
					"\r\n",
					"// Query Rules\r\n",
					"val query = spark.sql(\"\"\"\r\n",
					"                        SELECT \r\n",
					"                             fp.cod_calendario_monetario\r\n",
					"                            ,fp.sig_escritorio_contratado\r\n",
					"                            ,fp.cod_divisao_processo\r\n",
					"                            ,MAX(fp.cod_fotografia) AS cod_fotografia\r\n",
					"                            ,fp.dtc_cadastro\r\n",
					"                            ,fp.nom_cadastro_responsavel\r\n",
					"                            ,fp.sts_ativo\r\n",
					"                            ,fp.nom_usuario_responsavel\r\n",
					"                            ,fp.dtc_data_fotografia\r\n",
					"                            ,fp.nom_usuario_fotografo\r\n",
					"                            ,fp.dtc_inicial\r\n",
					"                            ,fp.dtc_final\r\n",
					"                            ,fp.dtc_limite_foto\r\n",
					"                            ,fp.nom_usuario_cadastro\r\n",
					"                            ,fp.nom_escritorio_contratado\r\n",
					"                            ,fp.nom_escritorio_sap\r\n",
					"                            ,fp.sig_divisao\r\n",
					"                            ,fp.nom_divisao\r\n",
					"                            ,SUM(fp.qtd_processo) AS qtd_processo\r\n",
					"                            ,fp.desc_calendario\r\n",
					"                            ,1 AS newstatus\r\n",
					"                        FROM\r\n",
					"                           fotografias_possiveis fp\r\n",
					"                        WHERE\r\n",
					"                            fp.cod_calendario_monetario =\r\n",
					"                             (\r\n",
					"                                 SELECT\r\n",
					"                                      cm.cod_calendario_monetario\r\n",
					"                                 FROM\r\n",
					"                                    calendario_monetario_p3 cm\r\n",
					"                                 WHERE\r\n",
					"                                     cm.sts_ativo = 1\r\n",
					"                             )\r\n",
					"                            AND CONCAT\r\n",
					"                                  (\r\n",
					"                                    UPPER(fp.sig_escritorio_contratado),\r\n",
					"                                    UPPER(fp.cod_divisao_processo),\r\n",
					"                                    UPPER(fp.cod_calendario_monetario)\r\n",
					"                                  )\r\n",
					"                                NOT IN\r\n",
					"                                (\r\n",
					"                                    SELECT CONCAT\r\n",
					"                                             (\r\n",
					"                                                UPPER(ph.sig_escritorio_contratado),\r\n",
					"                                                UPPER(ph.cod_divisao_processo),\r\n",
					"                                                UPPER(ph.cod_calendario_monetario)\r\n",
					"                                             )\r\n",
					"                                    FROM\r\n",
					"                                        photographs ph\r\n",
					"                                    WHERE\r\n",
					"                                        ph.status <> '99'\r\n",
					"                                        AND ph.cod_calendario_monetario =\r\n",
					"                                                         (\r\n",
					"                                                            SELECT\r\n",
					"                                                                 cm.cod_calendario_monetario\r\n",
					"                                                            FROM\r\n",
					"                                                               calendario_monetario_p3 cm\r\n",
					"                                                            WHERE\r\n",
					"                                                                cm.sts_ativo = 1\r\n",
					"                                                         )\r\n",
					"                                )\r\n",
					"                                                       GROUP BY \r\n",
					"                                                                     fp.cod_calendario_monetario\r\n",
					"                            ,fp.sig_escritorio_contratado\r\n",
					"                            ,fp.cod_divisao_processo\r\n",
					"                            --,fp.cod_fotografia\r\n",
					"                            ,fp.dtc_cadastro\r\n",
					"                            ,fp.nom_cadastro_responsavel\r\n",
					"                            ,fp.sts_ativo\r\n",
					"                            ,fp.nom_usuario_responsavel\r\n",
					"                            ,fp.dtc_data_fotografia\r\n",
					"                            ,fp.nom_usuario_fotografo\r\n",
					"                            ,fp.dtc_inicial\r\n",
					"                            ,fp.dtc_final\r\n",
					"                            ,fp.dtc_limite_foto\r\n",
					"                            ,fp.nom_usuario_cadastro\r\n",
					"                            ,fp.nom_escritorio_contratado\r\n",
					"                            ,fp.nom_escritorio_sap\r\n",
					"                            ,fp.sig_divisao\r\n",
					"                            ,fp.nom_divisao\r\n",
					"                            ,fp.desc_calendario\r\n",
					"                        UNION\r\n",
					"                        (SELECT distinct\r\n",
					"                             null cod_calendario_monetario   \r\n",
					"                            ,null sig_escritorio_contratado \r\n",
					"                            ,null cod_divisao_processo      \r\n",
					"                            ,PH.cod_fotografia              \r\n",
					"                            ,null dtc_cadastro              \r\n",
					"                            ,null nom_cadastro_responsavel  \r\n",
					"                            ,null sts_ativo                 \r\n",
					"                            ,null nom_usuario_responsavel   \r\n",
					"                            ,null dtc_data_fotografia       \r\n",
					"                            ,null nom_usuario_fotografo     \r\n",
					"                            ,null dtc_inicial               \r\n",
					"                            ,null dtc_final                 \r\n",
					"                            ,null dtc_limite_foto           \r\n",
					"                            ,null nom_usuario_cadastro      \r\n",
					"                            ,null nom_escritorio_contratado \r\n",
					"                            ,null nom_escritorio_sap            \r\n",
					"                            ,null sig_divisao               \r\n",
					"                            ,null nom_divisao               \r\n",
					"                            ,null qtd_processo              \r\n",
					"                            ,null desc_calendario          \r\n",
					"                            ,'99' as newstatus\r\n",
					"                        from photographs PH\r\n",
					"                            left join fotografias_possiveis FP\r\n",
					"                                on(PH.id = FP.cod_fotografia\r\n",
					"                                    and PH.cod_calendario_monetario = FP.cod_calendario_monetario)\r\n",
					"                        where 1=1\r\n",
					"                            and FP.cod_fotografia is null\r\n",
					"                            and PH.cod_calendario_monetario in\r\n",
					"                                (SELECT cm.cod_calendario_monetario FROM calendario_monetario_p3 cm WHERE cm.sts_ativo = 1)\r\n",
					"                            and PH.status != '99')\"\"\"\r\n",
					"                            )\r\n",
					"\r\n",
					"// Core Query\r\n",
					"val dfFinal =  query.as(\"q\")\r\n",
					"    .withColumn(\"divisao\",\r\n",
					"    struct(col(\"q.cod_divisao_processo\").as(\"cod_divisao_processo\"),\r\n",
					"        col(\"q.sig_divisao\").as(\"sig_divisao\"),\r\n",
					"        col(\"q.nom_divisao\").as(\"nom_divisao\")))\r\n",
					"    .withColumn(\"escritorio\",\r\n",
					"    struct(col(\"q.sig_escritorio_contratado\").as(\"sig_escritorio_contratado\"),\r\n",
					"        col(\"q.nom_escritorio_contratado\").as(\"nom_escritorio_contratado\"),\r\n",
					"        col(\"q.nom_escritorio_sap\").as(\"nom_escritorio_sap\")))\r\n",
					"    .withColumn(\"calendario_monetario\",\r\n",
					"    struct(col(\"q.cod_calendario_monetario\").cast(\"String\").as(\"id\"),\r\n",
					"        col(\"q.cod_calendario_monetario\").as(\"cod_calendario_monetario\"),\r\n",
					"        to_timestamp(col(\"q.dtc_inicial\"),\"yyyy-MM-dd HH mm ss\").cast(\"String\").as(\"dtc_inicial\"),\r\n",
					"        to_timestamp(col(\"q.dtc_final\"),\"yyyy-MM-dd HH mm ss\").cast(\"String\").as(\"dtc_final\"),\r\n",
					"        col(\"sts_ativo\").as(\"sts_ativo\"),\r\n",
					"        col(\"desc_calendario\").as(\"desc_calendario\"),\r\n",
					"        to_timestamp(col(\"q.dtc_limite_foto\"),\"yyyy-MM-dd HH mm ss\").cast(\"String\").as(\"dtc_limite_foto\"),\r\n",
					"        col(\"q.nom_usuario_cadastro\").as(\"nom_usuario_cadastro\")))\r\n",
					"    .withColumn(\"q_current_ts\",\r\n",
					"    lit(\"\"))\r\n",
					"    .withColumn(\"q_status\",\r\n",
					"    lit(\"1\"))\r\n",
					"    .select(col(\"q.cod_fotografia\").cast(\"String\").as(\"id\"),\r\n",
					"    col(\"divisao\").as(\"divisao\"),\r\n",
					"    col(\"escritorio\").as(\"escritorio\"),\r\n",
					"    col(\"calendario_monetario\").as(\"calendario_monetario\"),\r\n",
					"    col(\"q_current_ts\").as(\"current_ts\"),\r\n",
					"    col(\"q_status\").as(\"status\"),\r\n",
					"    to_timestamp(col(\"q.dtc_cadastro\"),\"yyyy-MM-dd HH mm ss\").cast(\"String\").as(\"dtc_cadastro\"),\r\n",
					"    col(\"q.cod_fotografia\").cast(\"String\").as(\"cod_fotografia\"),\r\n",
					"    col(\"q.cod_calendario_monetario\").as(\"cod_calendario_monetario\"),\r\n",
					"    col(\"q.sig_escritorio_contratado\").as(\"sig_escritorio_contratado\"),\r\n",
					"    col(\"q.nom_usuario_responsavel\").as(\"nom_usuario_responsavel\"),\r\n",
					"    col(\"q.nom_usuario_fotografo\").as(\"nom_usuario_fotografo\"),\r\n",
					"    to_timestamp(col(\"q.dtc_data_fotografia\"),\"yyyy-MM-dd HH mm ss\").cast(\"String\").as(\"dtc_data_fotografia\"),\r\n",
					"    col(\"q.newstatus\").as(\"newstatus\"))\r\n",
					"    .distinct()\r\n",
					"\r\n",
					"val dfNoSelected = dfFinal.select(\r\n",
					"                                  \"id\",\r\n",
					"                                  \"divisao\",\r\n",
					"                                  \"escritorio\",\r\n",
					"                                  \"calendario_monetario\",\r\n",
					"                                  \"current_ts\",\r\n",
					"                                  \"status\",\r\n",
					"                                  \"dtc_cadastro\",\r\n",
					"                                  \"cod_fotografia\",\r\n",
					"                                  \"cod_calendario_monetario\",\r\n",
					"                                  \"sig_escritorio_contratado\",\r\n",
					"                                  \"nom_usuario_responsavel\",\r\n",
					"                                  \"nom_usuario_fotografo\",\r\n",
					"                                  \"dtc_data_fotografia\"\r\n",
					"                                 )\r\n",
					"\r\n",
					"\r\n",
					"// Write to CosmosDb in Photographs Container \"ItemAppend\" write strategy mode\r\n",
					"dfNoSelected\r\n",
					"    .write\r\n",
					"    .format(\"cosmos.oltp\")\r\n",
					"    .option(\"spark.synapse.linkedService\", linkedService)\r\n",
					"    .option(\"spark.cosmos.container\", containerTarget)\r\n",
					"    .option(\"spark.cosmos.write.strategy\", \"ItemAppend\")\r\n",
					"    .option(\"spark.cosmos.write.bulk.enabled\", \"true\")\r\n",
					"    .mode(\"append\")\r\n",
					"    .save()\r\n",
					"\r\n",
					"// Write to CosmosDb in Photographs Container \"ItemPatch\" write strategy mode\r\n",
					"dfFinal\r\n",
					"    .select(\r\n",
					"            \"id\",\r\n",
					"            \"newstatus\"\r\n",
					"           )\r\n",
					"            .write\r\n",
					"            .format(\"cosmos.oltp\")\r\n",
					"            .option(\"spark.synapse.linkedService\", linkedService)\r\n",
					"            .option(\"spark.cosmos.container\", containerTarget)\r\n",
					"            .option(\"spark.cosmos.write.strategy\", \"ItemPatch\")\r\n",
					"            .option(\"spark.cosmos.write.bulk.enabled\", \"false\")\r\n",
					"            .option(\"spark.cosmos.write.patch.columnConfigs\", \"[col(newstatus).path(/status).op(set)]\")\r\n",
					"            .mode(\"append\")\r\n",
					"            .save()"
				],
				"execution_count": 1
			}
		]
	}
}