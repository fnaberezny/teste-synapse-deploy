{
	"name": "P3_FOTOGRAFIA_EXTRACT",
	"properties": {
		"activities": [
			{
				"name": "ativos",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "DECLARE @dtc_cadastro_prox_d_util AS DATE\n\nSET @dtc_cadastro_prox_d_util = ( SELECT TOP 1 CAST(dtc_final as date) AS dtc_final\n                                    FROM Silver.calendario_monetario\n                                    WHERE cod_calendario_monetario = '@{pipeline().parameters.cod_calendario_monetario}'\n\t\t\t\t\t\t\t\t)\n\nIF (@dtc_cadastro_prox_d_util IS NULL)\n        THROW 50000, 'Data_Final: Nao existe calendario monetario para a data selecionada' , 1;\n\n    WHILE 1 = 1\n    BEGIN\n        IF DATEPART(WEEKDAY, @dtc_cadastro_prox_d_util) NOT IN (7, 1)\n           AND FORMAT(@dtc_cadastro_prox_d_util, 'ddMM') NOT IN (SELECT FORMAT(dtc_feriado, 'ddMM') FROM silver.feriado)\n          BREAK\n    \tSET @dtc_cadastro_prox_d_util = DATEADD(DAY, 1, @dtc_cadastro_prox_d_util)\n    END\n\nSELECT num_processo\n     , p.cod_empresa\n     , cod_tipo_contingencia\n     , m.nom_modulo AS modulo\n     , p.sts_origem_segregacao\n     , 'A' AS tipo_processamento\n     , cm.cod_calendario_monetario\n     , pfe.nom_usuario_responsavel\n     , pfe.nom_usuario_fotografo\n     , pfe.dtc_data_fotografia\n     , pfe.sig_escritorio_contratado\n\t  , pfe.cod_divisao_processo\n\t  , pfe.photographyId\n\t  , p.sts_ativo\n  FROM silver.processo AS p\n  JOIN silver.param_fotografia_evh AS pfe ON pfe.sig_escritorio_contratado = p.sig_escritorio_contratado \n                                                    AND pfe.cod_divisao_processo = p.cod_divisao_processo \n                                                    AND pfe.[status] = 0 \n                                                    AND pfe.id = '@{pipeline().parameters.id_raw}'\n  JOIN silver.calendario_monetario AS cm ON cm.cod_calendario_monetario = pfe.cod_calendario_monetario\n  JOIN silver.modulo_natureza AS mn\n    ON mn.cod_natureza = p.cod_natureza\n   AND mn.cod_especificacao_natureza = p.cod_especificacao_natureza\n   AND mn.cod_detalhe_especific_natureza = p.cod_detalhe_especific_natureza\n  JOIN silver.modulo AS m\n    ON m.cod_modulo = mn.cod_modulo\n WHERE p.sts_excluido = '0'\n   AND ( ( p.sts_ativo = '1' AND CAST(p.dtc_cadastro AS DATE) <= @dtc_cadastro_prox_d_util )\n         OR ( p.sts_ativo = '0'\n              AND CAST(p.dtc_cadastro AS DATE) <= @dtc_cadastro_prox_d_util\n              AND CAST(p.dtc_fim AS DATE) >= @dtc_cadastro_prox_d_util\n            )\n         OR ( p.sts_ativo = '2'\n              AND CAST(p.dtc_cadastro AS DATE) <= @dtc_cadastro_prox_d_util\n              AND CAST(p.dtc_fim AS DATE) >= @dtc_cadastro_prox_d_util\n            )\n       )\n   AND ( mn.cod_modulo != '5'\n         OR ( p.cod_tipo_acao_processo <> '51'\n              OR p.cod_tipo_acao_processo IS NULL\n            )\n       )\n   AND NOT ( p.cod_natureza = '100'\n             AND p.cod_especificacao_natureza = '3'\n             AND p.cod_detalhe_especific_natureza = '6'\n           )\n   AND NOT EXISTS ( SELECT 1\n                      FROM silver.terceiro_interessado AS ti\n                      JOIN silver.parte_processo AS pp\n                        ON pp.cod_parte_processo = ti.cod_parte_processo\n                     WHERE ti.cod_empresa = p.cod_empresa\n                       AND ti.num_processo = p.num_processo\n                       AND pp.sts_empresa_operadora = '1'\n                   )\n   AND ( mn.cod_modulo != '4'\n         OR NOT ( ( NOT EXISTS ( SELECT 1\n                                   FROM silver.autor AS a\n                                   JOIN silver.parte_processo AS pp\n                                     ON pp.cod_parte_processo = a.cod_parte_processo\n                                  WHERE a.num_processo = p.num_processo\n                                    AND a.cod_empresa = p.cod_empresa\n                                    AND pp.sts_empresa_operadora = '1'\n                               )\n                  )\n                  AND ( NOT EXISTS ( SELECT 1\n                                       FROM silver.reu AS r\n                                       JOIN silver.parte_processo AS pp\n                                         ON pp.cod_parte_processo = r.cod_parte_processo\n                                      WHERE r.num_processo = p.num_processo\n                                        AND r.cod_empresa = p.cod_empresa\n                                        AND pp.sts_empresa_operadora = '1'\n                                   )\n                      )\n                  AND ( EXISTS ( SELECT 1\n                                   FROM silver.vitima AS v\n                                   JOIN silver.parte_processo AS pp\n                                     ON pp.cod_parte_processo = v.cod_parte_processo\n                                  WHERE v.num_processo = p.num_processo\n                                    AND v.cod_empresa = p.cod_empresa\n                                    AND pp.sts_empresa_operadora = '1'\n                               )\n                      )\n                )\n       )\n   AND ( CAST(log_dtc_citacao AS DATE) <= ( SELECT top 1 cmAtual.dtc_final\n                                            FROM silver.calendario_monetario cmAtual\n                                            WHERE cmAtual.cod_calendario_monetario = '@{pipeline().parameters.cod_calendario_monetario}'\n                                                )\n         OR log_dtc_citacao IS NULL \n       )\n   and ((sts_area_responsavel is null) or (sts_area_responsavel is not null and sts_area_responsavel <> 'REG'))\n   and (sts_area_responsavel_geral is null or sts_area_responsavel_geral <> 'PSE')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_ativo_inativo__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "inativos",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ativos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "SELECT num_processo\n     , p.cod_empresa\n     , cod_tipo_contingencia\n     , m.nom_modulo AS modulo\n     , p.sts_origem_segregacao\n     , 'I' AS tipo_processamento\n     , cm.cod_calendario_monetario\n     , pfe.nom_usuario_responsavel\n     , pfe.nom_usuario_fotografo\n     , pfe.dtc_data_fotografia\n     , pfe.sig_escritorio_contratado\n\t  , pfe.cod_divisao_processo\n\t  , pfe.photographyId\n\t  , p.sts_ativo\n  FROM silver.processo AS p\n  JOIN silver.param_fotografia_evh AS pfe ON pfe.sig_escritorio_contratado = p.sig_escritorio_contratado AND pfe.cod_divisao_processo = p.cod_divisao_processo AND pfe.[status] = 0 AND pfe.id = '@{pipeline().parameters.id_raw}'\n  JOIN silver.calendario_monetario AS cm ON cm.cod_calendario_monetario = pfe.cod_calendario_monetario\n  JOIN silver.modulo_natureza AS mn\n    ON mn.cod_natureza = p.cod_natureza\n   AND mn.cod_especificacao_natureza = p.cod_especificacao_natureza\n   AND mn.cod_detalhe_especific_natureza = p.cod_detalhe_especific_natureza\n  JOIN silver.modulo AS m\n    ON m.cod_modulo = mn.cod_modulo\n WHERE p.sts_excluido = '0'\n   AND ( ( p.sts_ativo = '0'\n          AND p.dtc_fim BETWEEN cm.dtc_inicial AND cm.dtc_final\n         )\n         OR (  p.sts_ativo = '2'\n                  AND p.dtc_fim BETWEEN cm.dtc_inicial AND cm.dtc_final\n            )\n       )\n   AND ( mn.cod_modulo != '5'\n         OR ( p.cod_tipo_acao_processo <> '51'\n              OR p.cod_tipo_acao_processo IS NULL\n            )\n       )\n   AND NOT ( p.cod_natureza = '100'\n             AND p.cod_especificacao_natureza = '3'\n             AND p.cod_detalhe_especific_natureza = '6'\n           )\n   AND NOT EXISTS ( SELECT 1\n                      FROM silver.terceiro_interessado AS ti\n                      JOIN silver.parte_processo AS pp\n                        ON pp.cod_parte_processo = ti.cod_parte_processo\n                     WHERE ti.cod_empresa = p.cod_empresa\n                       AND ti.num_processo = p.num_processo\n                       AND pp.sts_empresa_operadora = '1'\n                   )\n   AND ( mn.cod_modulo != '4'\n         OR NOT ( ( NOT EXISTS ( SELECT 1\n                                   FROM silver.autor AS a\n                                   JOIN silver.parte_processo AS pp\n                                     ON pp.cod_parte_processo = a.cod_parte_processo\n                                  WHERE a.num_processo = p.num_processo\n                                    AND a.cod_empresa = p.cod_empresa\n                                    AND pp.sts_empresa_operadora = '1'\n                               )\n                  )\n                  AND ( NOT EXISTS ( SELECT 1\n                                       FROM silver.reu AS r\n                                       JOIN silver.parte_processo AS pp\n                                         ON pp.cod_parte_processo = r.cod_parte_processo\n                                      WHERE r.num_processo = p.num_processo\n                                        AND r.cod_empresa = p.cod_empresa\n                                        AND pp.sts_empresa_operadora = '1'\n                                   )\n                      )\n                  AND ( EXISTS ( SELECT 1\n                                   FROM silver.vitima AS v\n                                   JOIN silver.parte_processo AS pp\n                                     ON pp.cod_parte_processo = v.cod_parte_processo\n                                  WHERE v.num_processo = p.num_processo\n                                    AND v.cod_empresa = p.cod_empresa\n                                    AND pp.sts_empresa_operadora = '1'\n                               )\n                      )\n                )\n       )\n   AND ( cast(log_dtc_citacao as date) <= ( SELECT top 1 cmAtual.dtc_final\n                                            FROM silver.calendario_monetario cmAtual\n                                            WHERE cmAtual.cod_calendario_monetario = '@{pipeline().parameters.cod_calendario_monetario}'\n                                        )\n         OR log_dtc_citacao IS NULL \n       )\n   and ((sts_area_responsavel is null) or (sts_area_responsavel is not null and sts_area_responsavel <> 'REG'))\n   and (sts_area_responsavel_geral is null or sts_area_responsavel_geral <> 'PSE')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_ativo_inativo__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "pos_corte",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "inativos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "DECLARE @dt_lim_ant_1 as date \n\nDECLARE @dt_ultimo_dia_calendario_ant as date \n\nset @dt_lim_ant_1 = \n  (select dtc_limite_foto FROM\n        (SELECT \n            ROW_NUMBER() OVER(ORDER BY cm.cod_calendario_monetario DESC) AS Row,\n            cm.dtc_limite_foto\n        FROM Silver.calendario_monetario cm \n        WHERE @{pipeline().parameters.cod_calendario_monetario} >= cm.cod_calendario_monetario\n    ) as aaa \n    where Row=2)\n\nset @dt_ultimo_dia_calendario_ant = (select eomonth(@dt_lim_ant_1))\n\nIF (@dt_lim_ant_1 IS NULL)\n        THROW 50000, 'Data_Final: Nao existe calendario monetario para a data selecionada' , 1;\n\n    WHILE 1 = 1\n    BEGIN\n        IF DATEPART(WEEKDAY, @dt_lim_ant_1) NOT IN (7, 1)\n           AND FORMAT(@dt_lim_ant_1, 'ddMMyyyy') NOT IN (SELECT FORMAT(dtc_feriado, 'ddMMyyyy') FROM silver.feriado)\n          BREAK\n    \tSET @dt_lim_ant_1 = DATEADD(DAY, 1, @dt_lim_ant_1)\n    END\n\nIF (@dt_ultimo_dia_calendario_ant IS NULL)\n        THROW 50000, 'Data_Final: Nao existe calendario monetario para a data selecionada' , 1;\n\n    WHILE 1 = 1\n    BEGIN\n        IF DATEPART(WEEKDAY, @dt_ultimo_dia_calendario_ant) NOT IN (7, 1)\n           AND FORMAT(@dt_ultimo_dia_calendario_ant, 'ddMMyyyy') NOT IN (SELECT FORMAT(dtc_feriado, 'ddMMyyyy') FROM silver.feriado)\n          BREAK\n    \tSET @dt_ultimo_dia_calendario_ant = DATEADD(DAY, -1, @dt_ultimo_dia_calendario_ant)\n    END\n\n;WITH sop as\n(\nSELECT s1.*\nFROM silver.status_ocorrencia_processo S1\n\tinner join(\n\t\tSELECT\n\t\t\tnum_processo,\n\t\t\tcod_empresa,\n\t\t\tcod_ocorrencia,\n\t\t\tMax(sop0.dtc_cadastro) as dtc_cadastro\n\t\tFROM silver.status_ocorrencia_processo sop0\n    where   CONVERT(DATE, sop0.dtc_cadastro, 103) >= @dt_lim_ant_1\n            AND CONVERT(DATE, sop0.dtc_cadastro, 103) <= @dt_ultimo_dia_calendario_ant\n\t\tGROUP  BY num_processo,\n\t\t\tcod_empresa,\n\t\t\tcod_ocorrencia) as SMAX\n\t\ton  SMAX.num_processo = S1.num_processo\n\t\t\tand SMAX.cod_empresa = S1.cod_empresa \n\t\t\tand SMAX.cod_ocorrencia = S1.cod_ocorrencia\n\t\t\tand SMAX.dtc_cadastro = s1.dtc_cadastro\n)\n\nSELECT num_processo\n     , cod_empresa\n     , ISNULL(SUM(valor_total_pgto), 0) AS valor_total_pgto\n     , ISNULL(SUM(valor_operacional), 0) AS valor_operacional\n     , ISNULL(SUM(valor_financeiro), 0) AS valor_financeiro\n     , ISNULL(SUM(valor_baixa_deposito), 0) AS valor_baixa_deposito\n  FROM ( SELECT o.num_processo\n              , o.cod_empresa\n              , ISNULL(o.vlr_economico_envolvido, 0) AS valor_total_pgto\n              , ISNULL(o.vlr_economico_envolvido_op, 0) AS valor_operacional\n              , ISNULL(o.vlr_economico_envolvido_fin, 0) AS valor_financeiro\n              , 0 AS valor_baixa_deposito\n           FROM silver.ocorrencia AS o\n           JOIN silver.assoc_tipo_oco_mov AS a\n             ON a.cod_tipo_ocorrencia = o.cod_tipo_ocorrencia\n            AND a.cod_especific_tipo_ocorrencia = o.cod_especific_tipo_ocorrencia\n           LEFT JOIN sop AS s\n             ON s.num_processo = o.num_processo\n            AND s.cod_ocorrencia = o.cod_ocorrencia\n            AND s.cod_empresa = o.cod_empresa\n\t\t   JOIN Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai\n\t\t\t ON fai.num_processo = o.num_processo\n\t\t\t AND fai.cod_empresa = o.cod_empresa\n          WHERE CONVERT(DATE, o.dtc_cadastro, 103) >= @dt_lim_ant_1\n            AND CONVERT(DATE, o.dtc_cadastro, 103) <= @dt_ultimo_dia_calendario_ant\n\t\t        AND ( (s.cod_tipo_status_oco_processo NOT IN ( '8', '3' )\n\t\t\t\t\t         AND s.cod_tipo_status_oco_processo IS NOT NULL\n\t\t\t\t\t        )\n\t\t\t\t\t       OR o.cod_ocorrencia NOT IN (SELECT cod_ocorrencia FROM silver.status_ocorrencia_processo WHERE num_processo = o.num_processo AND cod_empresa = o.cod_empresa)\n                )\n\n         UNION ALL\n\n        SELECT v.num_processo\n              , v.cod_empresa\n              , 0 AS valor_total_pgto\n              , 0 AS valor_operacional\n              , 0 AS valor_financeiro\n              , ISNULL(vlr_pagamento, 0) AS valor_baixa_deposito\n           FROM silver.valor_data_processo AS v\n          WHERE cod_prestacao_contas IN ( SELECT cod_prestacao_contas AS c\n                                            FROM silver.prestacao_contas AS p\n\t\t\t\t\t\t\t\t\t\t\tJOIN Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai\n\t\t\t\t\t\t\t\t\t\t\t  ON fai.num_processo = p.num_processo\n\t\t\t\t\t\t\t\t\t\t\t AND fai.cod_empresa = p.cod_empresa\n                                           WHERE CONVERT(DATE, dtc_prestacao, 103) >= @dt_lim_ant_1\n                                             AND CONVERT(DATE, dtc_prestacao, 103) <= @dt_ultimo_dia_calendario_ant\n                                             AND num_doc_sap IS NOT NULL\n                                             AND TRIM(UPPER(num_doc_sap)) NOT IN ( 'ATUALIZACAO DE LEGAD'\n                                                                                 , 'ATUALIZACAO_LEGAF'\n                                                                                 , 'ATUALIZACAO LEGADO'\n                                                                                 , 'ATUALIZACAO_LEGADO'\n                                                                                 , 'ATUALIZACAO SIST'\n                                                                                 , 'ATUALIZACAO SISTEMIC'\n                                                                                 , 'ATUALIZACAO_SISTEMIC'\n                                                                                 )\n                                        )\n            AND v.cod_tipo_pagamento = '102'\n            AND v.cod_valor_data_processo_pai IS NOT NULL\n            AND sts_inativo IS NULL\n       ) t\n GROUP BY num_processo\n     , cod_empresa",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_pos_corte__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "definitivo",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "inativos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "DECLARE @dt_lim_1_mes as date \nDECLARE @cod_calendario_monetario as int = (SELECT CAST('@{pipeline().parameters.cod_calendario_monetario}' as int))\n\nset @dt_lim_1_mes = \n  (select distinct DATEADD(DAY, 1,EOMONTH(dtc_limite_foto, -1))\n    FROM Silver.calendario_monetario cm\n    WHERE cm.cod_calendario_monetario = @cod_calendario_monetario\n    )\n\nIF (@dt_lim_1_mes IS NULL)\n        THROW 50000, 'Data_Final: Nao existe calendario monetario para a data selecionada' , 1;\n\n    WHILE 1 = 1\n    BEGIN\n        IF DATEPART(WEEKDAY, @dt_lim_1_mes) NOT IN (7, 1)\n           AND FORMAT(@dt_lim_1_mes, 'ddMMyyyy') NOT IN (SELECT FORMAT(dtc_feriado, 'ddMMyyyy') FROM silver.feriado)\n          BREAK\n    \tSET @dt_lim_1_mes = DATEADD(DAY, 1, @dt_lim_1_mes)\n    END\n\n;WITH sop as\n(\nSELECT s1.*\nFROM silver.status_ocorrencia_processo S1\n\tinner join(\n\t\tSELECT\n\t\t\tnum_processo,\n\t\t\tcod_empresa,\n\t\t\tcod_ocorrencia,\n\t\t\tMax(sop0.dtc_cadastro) as dtc_cadastro\n\t\tFROM silver.status_ocorrencia_processo sop0\n        INNER JOIN silver.calendario_monetario AS cm0\n             ON cm0.cod_calendario_monetario = @cod_calendario_monetario\n    where CONVERT(DATE, sop0.dtc_cadastro, 103) >= @dt_lim_1_mes\n            AND CONVERT(DATE, sop0.dtc_cadastro, 103) <= CONVERT(DATE, cm0.dtc_limite_foto, 103)\n\t\tGROUP  BY num_processo,\n\t\t\tcod_empresa,\n\t\t\tcod_ocorrencia) as SMAX\n\t\ton  SMAX.num_processo = S1.num_processo\n\t\t\tand SMAX.cod_empresa = S1.cod_empresa \n\t\t\tand SMAX.cod_ocorrencia = S1.cod_ocorrencia\n\t\t\tand SMAX.dtc_cadastro = s1.dtc_cadastro\n)\n\nSELECT num_processo\n     , cod_empresa\n     , ISNULL(SUM(valor_total_pgto), 0) AS valor_total_pgto\n     , ISNULL(SUM(valor_operacional), 0) AS valor_operacional\n     , ISNULL(SUM(valor_financeiro), 0) AS valor_financeiro\n     , ISNULL(SUM(valor_baixa_deposito), 0) AS valor_baixa_deposito\n  FROM ( SELECT o.num_processo\n              , o.cod_empresa\n              , ISNULL(o.vlr_economico_envolvido, 0) AS valor_total_pgto\n              , ISNULL(o.vlr_economico_envolvido_op, 0) AS valor_operacional\n              , ISNULL(o.vlr_economico_envolvido_fin, 0) AS valor_financeiro\n              , 0 AS valor_baixa_deposito\n           FROM silver.ocorrencia AS o\n           JOIN silver.calendario_monetario AS cm\n             ON cm.cod_calendario_monetario = @cod_calendario_monetario\n           JOIN silver.assoc_tipo_oco_mov AS a\n             ON a.cod_tipo_ocorrencia = o.cod_tipo_ocorrencia\n            AND a.cod_especific_tipo_ocorrencia = o.cod_especific_tipo_ocorrencia\n           LEFT JOIN sop AS s\n             ON s.num_processo = o.num_processo\n            AND s.cod_ocorrencia = o.cod_ocorrencia\n            AND s.cod_empresa = o.cod_empresa\n           JOIN Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai\n             ON fai.num_processo = o.num_processo\n             AND fai.cod_empresa = o.cod_empresa\n          WHERE CONVERT(DATE, o.dtc_cadastro, 103) >= @dt_lim_1_mes\n            AND CONVERT(DATE, o.dtc_cadastro, 103) <= CONVERT(DATE, cm.dtc_limite_foto, 103)\n            AND s.cod_tipo_status_oco_processo NOT IN ( '8', '3' )\n            AND s.cod_tipo_status_oco_processo IS NOT NULL\n\n         UNION ALL\n         \n         SELECT o.num_processo\n              , o.cod_empresa\n              , ISNULL(o.vlr_economico_envolvido, 0) AS valor_total_pgto\n              , ISNULL(o.vlr_economico_envolvido_op, 0) AS valor_operacional\n              , ISNULL(o.vlr_economico_envolvido_fin, 0) AS valor_financeiro\n              , 0 AS valor_baixa_deposito\n           FROM silver.ocorrencia AS o\n           JOIN silver.calendario_monetario AS cm\n             ON cm.cod_calendario_monetario = @cod_calendario_monetario\n           JOIN silver.assoc_tipo_oco_mov AS a\n             ON a.cod_tipo_ocorrencia = o.cod_tipo_ocorrencia\n            AND a.cod_especific_tipo_ocorrencia = o.cod_especific_tipo_ocorrencia\n           LEFT JOIN sop AS s\n             ON s.num_processo = o.num_processo\n            AND s.cod_ocorrencia = o.cod_ocorrencia\n            AND s.cod_empresa = o.cod_empresa\n          WHERE CONVERT(DATE, o.dtc_cadastro, 103) >= @dt_lim_1_mes\n            AND CONVERT(DATE, o.dtc_cadastro, 103) <= CONVERT(DATE, cm.dtc_limite_foto, 103)\n            AND o.cod_ocorrencia NOT IN (SELECT cod_ocorrencia \n                                           FROM silver.status_ocorrencia_processo \n                                          WHERE num_processo = o.num_processo \n                                            AND cod_empresa = o.cod_empresa)\n\n         UNION ALL\n        SELECT v.num_processo\n              , v.cod_empresa\n              , 0 AS valor_total_pgto\n              , 0 AS valor_operacional\n              , 0 AS valor_financeiro\n              , ISNULL(vlr_pagamento, 0) AS valor_baixa_deposito\n           FROM silver.valor_data_processo AS v\n          WHERE cod_prestacao_contas IN ( SELECT cod_prestacao_contas AS c\n                                            FROM silver.prestacao_contas AS p\n                                            JOIN silver.calendario_monetario AS cm\n                                              ON cm.cod_calendario_monetario = @cod_calendario_monetario\n                                           WHERE CONVERT(DATE, dtc_prestacao, 103) >= @dt_lim_1_mes\n                                             AND CONVERT(DATE, dtc_prestacao, 103) <= CONVERT(DATE, cm.dtc_limite_foto, 103)\n                                             AND num_doc_sap IS NOT NULL\n                                             AND TRIM(UPPER(num_doc_sap)) NOT IN ( 'ATUALIZACAO DE LEGAD'\n                                                                                 , 'ATUALIZACAO_LEGAF'\n                                                                                 , 'ATUALIZACAO LEGADO'\n                                                                                 , 'ATUALIZACAO_LEGADO'\n                                                                                 , 'ATUALIZACAO SIST'\n                                                                                 , 'ATUALIZACAO SISTEMIC'\n                                                                                 , 'ATUALIZACAO_SISTEMIC'\n                                                                                 )\n                                        )\n            AND v.cod_tipo_pagamento = '102'\n            AND v.cod_valor_data_processo_pai IS NOT NULL\n            AND sts_inativo IS NULL\n       ) t\n GROUP BY num_processo\n     , cod_empresa",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_definitivo__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "reavaliacao_processo",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "inativos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "DECLARE @cod_calendario_monetario AS INT = ( @{pipeline().parameters.cod_calendario_monetario} );\n\nWITH REAV_PROC AS\n(\nSELECT cod_reavaliacao\n     , r.num_processo\n     , r.cod_empresa\n     , r.dtc_cadastro\n     , r.nom_usuario_cadastro\n     , vlr_curto_prazo\n     , vlr_curto_prazo_fin\n     , vlr_longo_prazo\n     , vlr_longo_prazo_fin\n     , vlr_possivel\n     , vlr_remoto\n     , cod_tipo_reav_curto_prov\n     , cod_tipo_reav_longo_prov\n     , cod_tipo_reav_remo\n     , cod_tipo_reav_poss\n     , r.cod_calendario_monetario\n     , sts_remoto_reversao\n     , cod_pedido_processo\nFROM silver.reavaliacao AS r\n\tINNER JOIN Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai\n\t\tON fai.num_processo = r.num_processo\n\t\t\tAND fai.cod_empresa = r.cod_empresa\nWHERE r.cod_calendario_monetario = @cod_calendario_monetario\n), \nREAV_PROC_CURTO_PROV AS\n(\nselect num_processo, cod_empresa, cod_tipo_reav_curto_prov,\n\tsum(vlr_curto_prazo) as vlr_curto_prazo,\n\tsum(vlr_curto_prazo_fin) as vlr_curto_prazo_fin\nfrom REAV_PROC\ngroup by num_processo, cod_empresa, cod_tipo_reav_curto_prov\n)\n, REAV_PROC_LONGO_PROV AS\n(\nselect num_processo, cod_empresa, cod_tipo_reav_longo_prov,\n\tsum(vlr_longo_prazo) as vlr_longo_prazo,\n\tsum(vlr_longo_prazo_fin) as vlr_longo_prazo_fin\nfrom REAV_PROC\ngroup by num_processo, cod_empresa, cod_tipo_reav_longo_prov\n)\n, REAV_PROC_REMO AS\n(\nselect num_processo, cod_empresa, cod_tipo_reav_remo,\n\tsum(vlr_remoto) as vlr_remoto\nfrom REAV_PROC\ngroup by num_processo, cod_empresa, cod_tipo_reav_remo\n)\n, REAV_PROC_POSS AS\n(\nselect num_processo, cod_empresa, cod_tipo_reav_poss,\n\tsum(vlr_possivel) as vlr_possivel\nfrom REAV_PROC\ngroup by num_processo, cod_empresa, cod_tipo_reav_poss\n)\n\nselect NULL as cod_reavaliacao\n     , num_processo\n     , cod_empresa\n     , dtc_cadastro\n     , nom_usuario_cadastro\n     , isnull(vlr_curto_prazo,0) as vlr_curto_prazo\n     , isnull(vlr_curto_prazo_fin,0) as vlr_curto_prazo_fin\n     , isnull(vlr_longo_prazo,0) as vlr_longo_prazo\n     , isnull(vlr_longo_prazo_fin,0) as vlr_longo_prazo_fin\n     , isnull(vlr_possivel,0) as vlr_possivel\n     , isnull(vlr_remoto,0) as vlr_remoto\n     , cod_tipo_reav_curto_prov\n     , cod_tipo_reav_longo_prov\n     , cod_tipo_reav_remo\n     , cod_tipo_reav_poss\n     , cod_calendario_monetario\n     , sts_remoto_reversao\n     , cod_pedido_processo\n from (\nselect \n     NULL as cod_reavaliacao\n     , fai.num_processo\n     , fai.cod_empresa\n     , getdate() as dtc_cadastro\n     , NULL as nom_usuario_cadastro\n     , CP.vlr_curto_prazo\n     , CP.vlr_curto_prazo_fin\n     , LP.vlr_longo_prazo\n     , LP.vlr_longo_prazo_fin\n     , POSS.vlr_possivel\n     , REMO.vlr_remoto\n     , CP.cod_tipo_reav_curto_prov\n     , LP.cod_tipo_reav_longo_prov\n     , REMO.cod_tipo_reav_remo\n     , POSS.cod_tipo_reav_poss\n     , NULL as cod_calendario_monetario\n     , NULL as sts_remoto_reversao\n     , NULL as cod_pedido_processo\nfrom Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai \n\tLEFT JOIN REAV_PROC_CURTO_PROV CP\n\t\ton(CP.num_processo = fai.num_processo\n\t\t\tand CP.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_curto_prov = 1)\n\tLEFT JOIN REAV_PROC_LONGO_PROV LP\n\t\ton(LP.num_processo = fai.num_processo\n\t\t\tand LP.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_longo_prov=1)\n\tLEFT JOIN REAV_PROC_REMO REMO\n\t\ton(REMO.num_processo = fai.num_processo\n\t\t\tand REMO.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_remo=1)\n\tLEFT JOIN REAV_PROC_POSS POSS\n\t\ton(POSS.num_processo = fai.num_processo\n\t\t\tand POSS.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_poss=1)\nUNION\nselect \n     NULL as cod_reavaliacao\n     , fai.num_processo\n     , fai.cod_empresa\n     , getdate() as dtc_cadastro\n     , NULL as nom_usuario_cadastro\n     , CP.vlr_curto_prazo\n     , CP.vlr_curto_prazo_fin\n     , LP.vlr_longo_prazo\n     , LP.vlr_longo_prazo_fin\n     , POSS.vlr_possivel\n     , REMO.vlr_remoto\n     , CP.cod_tipo_reav_curto_prov\n     , LP.cod_tipo_reav_longo_prov\n     , REMO.cod_tipo_reav_remo\n     , POSS.cod_tipo_reav_poss\n     , NULL as cod_calendario_monetario\n     , NULL as sts_remoto_reversao\n     , NULL as cod_pedido_processo\nfrom Silver.tmp_fti_ativo_inativo__@{pipeline().parameters.id} AS fai \n\tLEFT JOIN REAV_PROC_CURTO_PROV CP\n\t\ton(CP.num_processo = fai.num_processo\n\t\t\tand CP.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_curto_prov = 2)\n\tLEFT JOIN REAV_PROC_LONGO_PROV LP\n\t\ton(LP.num_processo = fai.num_processo\n\t\t\tand LP.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_longo_prov=2)\n\tLEFT JOIN REAV_PROC_REMO REMO\n\t\ton(REMO.num_processo = fai.num_processo\n\t\t\tand REMO.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_remo=2)\n\tLEFT JOIN REAV_PROC_POSS POSS\n\t\ton(POSS.num_processo = fai.num_processo\n\t\t\tand POSS.cod_empresa = fai.cod_empresa\n            and cod_tipo_reav_poss=2)\n) as reav",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_reavaliacao_processo__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "item_anterior",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "inativos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "DECLARE @cod_calendario_monetario AS INT = ( @{pipeline().parameters.cod_calendario_monetario} )\n\n;WITH m AS\n(\n    SELECT fi.num_processo\n         , MAX(cod_fotografia_item) AS max_cod_fotografia_item\n      FROM Silver.fotografia_item AS fi\n      JOIN Silver.[tmp_fti_ativo_inativo__@{pipeline().parameters.id}] AS fai\n        ON fai.num_processo = fi.num_processo\n\t\t AND fai.cod_empresa = fi.cod_empresa\n      JOIN (SELECT cod_fotografia\n\t\t\t\t\t  , cod_calendario_monetario\n\t\t\t\t\t  , MAX(cod_ver_fotografia) AS cod_ver_fotografia\n\t\t\t\t  FROM Silver.fotografia\n\t\t\t\t GROUP by cod_fotografia\n\t\t\t\t\t  , cod_calendario_monetario) AS f\n        ON f.cod_fotografia = fi.cod_fotografia\n--\t\t AND f.cod_ver_fotografia = fi.cod_ver_fotografia\n     WHERE f.cod_calendario_monetario = ( SELECT MAX(cod_calendario_monetario)\n                                            FROM Silver.calendario_monetario\n                                           WHERE cod_calendario_monetario < @cod_calendario_monetario\n                                        )\n     GROUP BY fi.num_processo\n)\nSELECT fi.num_processo\n     , fi.cod_empresa\n     , cod_fotografia_item\n     , ISNULL(vlr_pedido, 0) AS vlr_pedido\n     , ISNULL(vlr_longo_prazo, 0) AS vlr_longo_prazo\n     , ISNULL(vlr_longo_prazo_fin, 0) AS vlr_longo_prazo_fin\n     , ISNULL(vlr_curto_prazo, 0) AS vlr_curto_prazo\n     , ISNULL(vlr_curto_prazo_fin, 0) AS vlr_curto_prazo_fin\n     , ISNULL(vlr_possivel, 0) AS vlr_possivel\n     , ISNULL(vlr_remoto, 0) AS vlr_remoto\n     , UPPER(CASE WHEN situacao_processo = '1'\n\t\t\t\t\t\t\tTHEN 'Ativo'\n\t\t\t\t\t\t\tWHEN situacao_processo = '0'\n\t\t\t\t\t\t\tTHEN 'Inativo'\n\t\t\t\t\t\t\tWHEN situacao_processo = '2'\n\t\t\t\t\t\t\tTHEN 'Arquivo Morto'\n\t\t\t\t\t\t\tWHEN situacao_processo = '3'\n\t\t\t\t\t\t\tTHEN 'Pendeten Citação'\n\t\t\t\t\t\t\tELSE ''\n\t\t\t\t\t\t\t END) AS situacao_anterior\n     , des_tipo_acao\n     , fi.cod_divisao_processo\n  FROM Silver.fotografia_item AS fi\n  JOIN Silver.[tmp_fti_ativo_inativo__@{pipeline().parameters.id}] AS fai\n\t ON fai.num_processo = fi.num_processo\n\tAND fai.cod_empresa = fi.cod_empresa\n  JOIN m\n\t ON m.num_processo = fai.num_processo\n\tAND m.max_cod_fotografia_item = fi.cod_fotografia_item\n  LEFT JOIN Silver.tipo_acao AS ta\n\t ON ta.cod_pre_objeto_empresa = fi.cod_pre_objeto_empresa\n\tAND ta.cod_tipo_acao = fi.cod_tipo_acao",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Jarvis_Pool_Dedicado16152",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Silver",
							"Table": {
								"value": "tmp_fti_anterior__@{pipeline().parameters.id}",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"cod_calendario_monetario": {
				"type": "string",
				"defaultValue": "161"
			},
			"nom_usuario_responsavel": {
				"type": "string",
				"defaultValue": "BA86365"
			},
			"nom_usuario_fotografo": {
				"type": "string",
				"defaultValue": "BA86365"
			},
			"dtc_data_fotografia": {
				"type": "string",
				"defaultValue": "2022-08-01 00:00:00"
			},
			"sig_escritorio_contratado": {
				"type": "string",
				"defaultValue": "UVA"
			},
			"cod_divisao_processo": {
				"type": "string",
				"defaultValue": "3"
			},
			"photographyId": {
				"type": "string",
				"defaultValue": "45183"
			},
			"id": {
				"type": "string",
				"defaultValue": "TESTE_CALCULOS4"
			},
			"id_raw": {
				"type": "string",
				"defaultValue": "TESTE_CALCULOS4"
			}
		},
		"folder": {
			"name": "P3/OLD"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-31T20:28:43Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}