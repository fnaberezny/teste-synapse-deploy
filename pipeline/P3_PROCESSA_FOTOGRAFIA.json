{
	"name": "P3_PROCESSA_FOTOGRAFIA",
	"properties": {
		"description": "Processo de geração das primeiras fotografias.\nAcionada por novas adições na calendario_monetario ou processo.\nRealiza a geração de novas fotografias possiveis e adição de processos na tabela processos pendentes.",
		"activities": [
			{
				"name": "Verifica Processos NTRAB",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.01:00:30",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "select count(*) AS processos from\n[rl3].[processos_pendentes]\nwhere\nphoto_signature is null and\ntipo_processo = 'N'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Jarvis_Pool_Dedicado1615232",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "silver",
							"Table": "calendario_monetario_p3"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Processa Foto NTRAB",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Verifica Processos NTRAB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('Verifica Processos NTRAB').output.firstRow.processos,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Finaliza Processo",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "GERA FOTOS POSSIVEIS NTRAB",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "Ler Calendario_atual NTRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "syndpjarvisprod",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[rl3].[gera_fotos_possiveis]",
								"storedProcedureParameters": {
									"cod_calendario": {
										"value": {
											"value": "@activity('Ler Calendario_atual NTRAB').output.firstRow.cod_calendario_monetario",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipe_id": {
										"value": {
											"value": "@concat(pipeline().parameters.pipe_origem,'-NTRAB')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Ler Calendario_atual NTRAB",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": "select MAX(cod_calendario_monetario) AS cod_calendario_monetario from\n[Silver].[calendario_monetario_p3]\nwhere\nsts_ativo = 1",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "silver",
										"Table": "calendario_monetario_p3"
									}
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "GERA FOTOGRAFIA NTRAB",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "GERA FOTOS POSSIVEIS NTRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "syndpjarvisprod",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[rl3].proc_foto_processo",
								"storedProcedureParameters": {
									"cod_calendario_monetario": {
										"value": {
											"value": "@activity('Ler Calendario_atual NTRAB').output.firstRow.cod_calendario_monetario\n",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipeID": {
										"value": {
											"value": "@concat(pipeline().parameters.pipe_origem,'-NTRAB')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "cosmos_foto_projecao_upsert_NTRAB",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "GERA FOTOGRAFIA NTRAB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "fotografia_projecao",
									"type": "NotebookReference"
								},
								"parameters": {
									"pipe_id": {
										"value": {
											"value": "@pipeline().parameters.pipe_origem",
											"type": "Expression"
										},
										"type": "string"
									},
									"cod_calendario_monetario": {
										"value": {
											"value": "@activity('Ler Calendario_atual NTRAB').output.firstRow.cod_calendario_monetario",
											"type": "Expression"
										},
										"type": "int"
									}
								},
								"snapshot": true,
								"executorSize": "Medium",
								"conf": {
									"spark.dynamicAllocation.enabled": true
								},
								"driverSize": "Medium"
							}
						},
						{
							"name": "Atualiza Log com Falha NTRAB",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "GERA FOTOGRAFIA NTRAB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SelfHosted Lake",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "update rl3.geracao_fotografia_log\nset ultima_atualizacao = getdate(),\n    ultimo_status = 'Processado com ERRO',\n    Processamento_concluido = 1\nwhere pipeline_id = concat('@{pipeline().parameters.pipe_origem}','-NTRAB')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Cosmos Projecao NTRAB",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Busca Data Lake Pedidos",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "Select a.* from rl3.vw_carga_projecao a\nwhere\na.tipo_processo = 'N'\nand\na.cod_calendario_monetario = @{activity('Ler Calendario_atual NTRAB').output.firstRow.cod_calendario_monetario}\n/*    and a.num_processo not in (select num_processo from lock_cosmos where Ativo = 'A') */",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "CosmosDbSqlApiSink",
									"writeBehavior": "upsert",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"parallelCopies": 10,
								"dataIntegrationUnits": 32
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": " ",
										"Table": " "
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CosmosDB_app",
									"type": "DatasetReference",
									"parameters": {
										"cotainer_name": "fotografia_projecao"
									}
								}
							]
						},
						{
							"name": "marca registros carga cosmos",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Cosmos Projecao NTRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SelfHosted Lake",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update rl3.processos_pendentes\nset cosmos_signature = convert(varchar(35), current_timestamp, 120) \nwhere cosmos_signature is null \nand tipo_processo = 'N'\nand photo_signature is not null\n\n-- >\n/*update lc\n   set ativo = 'I'\n  from lock_cosmos lc\n  join Silver.processo p\n    on p.num_processo = lc.num_processo\nJOIN silver.modulo_natureza AS mn ON mn.cod_natureza = p.cod_natureza\n                                AND mn.cod_especificacao_natureza = p.cod_especificacao_natureza\n                                AND mn.cod_detalhe_especific_natureza = p.cod_detalhe_especific_natureza\n where ativo = 'A'\n   and mn.cod_modulo <> 6 */\n-- <"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Busca Data Lake Pedidos",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GERA FOTOGRAFIA NTRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "select current_ts_p3,\npending_update,\nnum_processo,\ntipo_pedido_id\nfrom pedidos_trabalhistas_p3\nwhere current_ts_p3 > cast(format(dateadd(minute, -10, getdate()) at time zone 'UTC' AT TIME ZONE 'E. South America Standard Time', 'yyyy-MM-dd HH:mm:ss') as datetime)\n",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlDWSink",
									"writeBehavior": "Insert",
									"sqlWriterUseTableLock": true,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Lake",
									"type": "DatasetReference",
									"parameters": {
										"Database": "dbo",
										"Table": "teste"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "dbo",
										"Table": "processos_alt_cosmos"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Verifica Processos TRAB",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.01:00:30",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "select count(*) AS processos from\n[rl3].[processos_pendentes]\nwhere\nphoto_signature is null and\ncosmos_signature is null and\ntipo_processo = 'T' \n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Jarvis_Pool_Dedicado1615232",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "silver",
							"Table": "calendario_monetario_p3"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Processa Foto TRAB",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Verifica Processos TRAB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('Verifica Processos TRAB').output.firstRow.processos,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Finaliza Processo TRAB",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "GERA FOTOS POSSIVEIS TRAB",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "Ler Calendario_atual TRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "syndpjarvisprod",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[rl3].[gera_fotos_possiveis]",
								"storedProcedureParameters": {
									"cod_calendario": {
										"value": {
											"value": "@activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipe_id": {
										"value": {
											"value": "@concat(pipeline().parameters.pipe_origem,'-TRAB')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Ler Calendario_atual TRAB",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": "select MAX(cod_calendario_monetario) AS cod_calendario_monetario from\n[Silver].[calendario_monetario_p3]\nwhere\nsts_ativo = 1",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "silver",
										"Table": "calendario_monetario_p3"
									}
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "GERA FOTOGRAFIA TRAB",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "GERA FOTOS POSSIVEIS TRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "syndpjarvisprod",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[rl3].[proc_foto_processo_pedidos_trabalhistas]",
								"storedProcedureParameters": {
									"cod_calendario_monetario": {
										"value": {
											"value": "@activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario\n",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipeID": {
										"value": {
											"value": "@concat(pipeline().parameters.pipe_origem,'-TRAB')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Cosmos Projecao Trabalhistas Trab",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "Cosmos Projecao TRAB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "projecao_trabalhistas",
									"type": "NotebookReference"
								},
								"parameters": {
									"pipe_id": {
										"value": {
											"value": "@concat(pipeline().parameters.pipe_origem,'-TRAB')",
											"type": "Expression"
										},
										"type": "string"
									},
									"cod_calendario_monetario": {
										"value": {
											"value": "@activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario",
											"type": "Expression"
										},
										"type": "int"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "synspjarvisprd",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Medium",
								"conf": {
									"spark.dynamicAllocation.enabled": true
								},
								"driverSize": "Medium"
							}
						},
						{
							"name": "Atualiza Log com Falha TRAB",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "GERA FOTOGRAFIA TRAB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SelfHosted Lake",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "update rl3.geracao_fotografia_log\nset ultima_atualizacao = getdate(),\n    ultimo_status = 'Processado com ERRO',\n    Processamento_concluido = 1\nwhere pipeline_id = concat('@{pipeline().parameters.pipe_origem}\n','-TRAB')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Cosmos Projecao TRAB",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Busca Lake Processos",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "Select a.* from rl3.vw_carga_projecao a,\nrl3.processos_pendentes b where\na.num_processo = b.num_processo\nand\ncosmos_signature is null\n    and tipo_processo = 'T'\n    and cod_calendario_monetario = @{activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "CosmosDbSqlApiSink",
									"writeBehavior": "upsert",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": " ",
										"Table": " "
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CosmosDB_app",
									"type": "DatasetReference",
									"parameters": {
										"cotainer_name": "fotografia_projecao"
									}
								}
							]
						},
						{
							"name": "marca registros carga cosmos_trab",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "cosmos_pedidos_trabalhistas_upsert_TRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Cosmos Projecao Trabalhistas",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SelfHosted Lake",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update rl3.processos_pendentes\nset cosmos_signature = current_timestamp\nwhere cosmos_signature is null \nand tipo_processo = 'T'\nand photo_signature is not null\n\n-- >\n/*update lc\n   set ativo = 'I'\n  from lock_cosmos lc\n  join Silver.processo p\n    on p.num_processo = lc.num_processo\nJOIN silver.modulo_natureza AS mn ON mn.cod_natureza = p.cod_natureza\n                                AND mn.cod_especificacao_natureza = p.cod_especificacao_natureza\n                                AND mn.cod_detalhe_especific_natureza = p.cod_detalhe_especific_natureza\n where ativo = 'A'\n   and mn.cod_modulo = 6 */\n-- <"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "cosmos_pedidos_trabalhistas_upsert_TRAB",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Busca Lake Processos",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "select a.current_ts_p3 as dat, a.*\n  from rl3.vw_carga_projecao_pedidos a\nwhere \na.cod_calendario_monetario = @{activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario}\nand a.num_processo not in ( select b.num_processo\n                            from processos_alt_cosmos b\n                            where   b.num_processo = a.num_processo\n                            and b.tipo_pedido_id = a.tipo_pedido_id\n                            and a.current_ts_p3 <= b.current_ts_p3  \n                            and pending_update = 1\n                            group by b.num_processo) ",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "CosmosDbSqlApiSink",
									"writeBehavior": "upsert",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": " ",
										"Table": " "
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CosmosDB_app",
									"type": "DatasetReference",
									"parameters": {
										"cotainer_name": "pedidos_trabalhistas"
									}
								}
							]
						},
						{
							"name": "Busca Lake Processos",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GERA FOTOGRAFIA TRAB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "select current_ts_p3,\npending_update,\nnum_processo,\ntipo_pedido_id\nfrom pedidos_trabalhistas_p3\nwhere current_ts_p3 > cast(format(dateadd(minute, -300, getdate()) at time zone 'UTC' AT TIME ZONE 'E. South America Standard Time', 'yyyy-MM-dd HH:mm:ss') as datetime)\n",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlDWSink",
									"writeBehavior": "Insert",
									"sqlWriterUseTableLock": true,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Lake",
									"type": "DatasetReference",
									"parameters": {
										"Database": "dbo",
										"Table": "teste"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado1615232",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "dbo",
										"Table": "processos_alt_cosmos"
									}
								}
							]
						},
						{
							"name": "Cosmos Projecao Trabalhistas",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Busca Lake Processos",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "Select a.* from vw_carga_projecao a\nwhere\na.tipo_processo = 'T'\nand cod_calendario_monetario = @{activity('Ler Calendario_atual TRAB').output.firstRow.cod_calendario_monetario}\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "CosmosDbSqlApiSink",
									"writeBehavior": "insert"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Jarvis_Pool_Dedicado",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "dbo",
										"Table": "vw_carga_projecao"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CosmosDB_app",
									"type": "DatasetReference",
									"parameters": {
										"cotainer_name": "fotografia_projecao"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Executar External RL3",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Processa Foto NTRAB",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "Processa Foto TRAB",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "SILVER_INGESTION_EXTERNAL_CONTENT_RL3",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"pipe_origem": {
				"type": "string",
				"defaultValue": "teste 0101"
			}
		},
		"folder": {
			"name": "P3"
		},
		"annotations": [],
		"lastPublishTime": "2023-04-06T13:46:17Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}