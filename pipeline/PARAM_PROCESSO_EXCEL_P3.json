{
	"name": "PARAM_PROCESSO_EXCEL_P3",
	"properties": {
		"activities": [
			{
				"name": "get-max_current_ts",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "SELECT MAX(CONVERT(DATETIME, REPLACE(LEFT(current_ts, 18), 'T', ' '), 20)) AS max_current_ts\n  FROM Silver.param_processo_excel_p3 ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SynapseDedicado_SelfHosted",
						"type": "DatasetReference",
						"parameters": {
							"Schema": " ",
							"Table": " "
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "set-max_current_ts",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-max_current_ts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "max_current_ts",
					"value": {
						"value": "@activity('get-max_current_ts').output.firstRow.max_current_ts",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-new_requests_evh",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set-max_current_ts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM \n    param_processo_excel_p3\n    where CONVERT(DATETIME, REPLACE(LEFT(current_ts_p3, 18), 'T', ' '), 21) >  '@{variables('max_current_ts')}'\nORDER BY current_ts_p3 DESC;",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SynapseServeless_SelfHosted",
						"type": "DatasetReference",
						"parameters": {
							"database": "silver"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "foreach-new_request",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-new_requests_evh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-new_requests_evh').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 2,
					"activities": [
						{
							"name": "insert_param_excel",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Pool Dedicated",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "IF EXISTS (\n    SELECT 1 FROM silver.param_processo_excel_p3\n    WHERE id = '@{item().id}'\n    AND new_status = 0\n)\n    THROW 50001, 'Já existe uma execução em andamento para esse processo', 1;\n\nINSERT INTO [Silver].[param_processo_excel_p3] \n    (id\n    ,op_type\n    ,current_ts\n    ,name\n    ,userId\n    ,start_time\n    ,end_time\n    ,status\n    ,path\n    ,num_processo\n    ,is_process\n    ,newpk\n    ,cod_calendars\n    ,new_status\n    )\nVALUES( '@{item().id}'\n    ,'@{item().op_type}'\n    ,'@{item().current_ts_p3}'\n    ,'@{item().name}'\n    ,'@{item().userId}'\n    ,'@{item().start_time}'\n    ,'@{item().end_time}'\n    ,'@{item().status}'\n    ,'@{item().path}'\n    ,'@{item().num_processo}'\n    ,'@{item().is_process}'\n    ,'@{item().newpk}'\n    ,'@{item().cod_calendars}'\n    , 0\n)",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "R4_EXCEL",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "insert_param_excel",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "R4_Excel",
									"type": "NotebookReference"
								},
								"parameters": {
									"current_ts_new": {
										"value": {
											"value": "@{item().current_ts_p3}",
											"type": "Expression"
										},
										"type": "string"
									},
									"num_processo_new": {
										"value": {
											"value": "@{item().num_processo}",
											"type": "Expression"
										},
										"type": "string"
									},
									"cod_calendars_new": {
										"value": {
											"value": "@{item().cod_calendars}",
											"type": "Expression"
										},
										"type": "string"
									},
									"idProcess_new": {
										"value": {
											"value": "@{item().id}",
											"type": "Expression"
										},
										"type": "string"
									},
									"is_process_new": {
										"value": {
											"value": "@{item().is_process}",
											"type": "Expression"
										},
										"type": "bool"
									},
									"idUser_new": {
										"value": {
											"value": "@{item().userId}",
											"type": "Expression"
										},
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "synspjarvisprd",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Medium",
								"conf": {
									"spark.dynamicAllocation.enabled": false,
									"spark.dynamicAllocation.minExecutors": 3,
									"spark.dynamicAllocation.maxExecutors": 3
								},
								"driverSize": "Medium",
								"numExecutors": 3
							}
						},
						{
							"name": "Script_sucesso",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "R4_EXCEL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Pool Dedicated",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "UPDATE Silver.param_processo_excel_p3 SET new_status = 1\nWHERE id = '@{item().name}'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Script_falha",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "R4_EXCEL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Pool Dedicated",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "UPDATE Silver.param_processo_excel_p3 SET new_status = 2\nWHERE id = '@{item().name}'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "event_error",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "R4_EXCEL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "output_fail",
									"type": "NotebookReference"
								},
								"parameters": {
									"current_ts_new": {
										"value": {
											"value": "@{item().current_ts_p3}",
											"type": "Expression"
										},
										"type": "string"
									},
									"num_processo_new": {
										"value": {
											"value": "@{item().num_processo}",
											"type": "Expression"
										},
										"type": "string"
									},
									"cod_calendars_new": {
										"value": {
											"value": "@{item().cod_calendars}",
											"type": "Expression"
										},
										"type": "string"
									},
									"idProcess_new": {
										"value": {
											"value": "@{item().id}",
											"type": "Expression"
										},
										"type": "string"
									},
									"is_process_new": {
										"value": {
											"value": "@{item().is_process}",
											"type": "Expression"
										},
										"type": "bool"
									},
									"idUser_new": {
										"value": {
											"value": "@{item().userId}",
											"type": "Expression"
										},
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "synspjarvisprd",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Medium",
								"conf": {
									"spark.dynamicAllocation.enabled": false,
									"spark.dynamicAllocation.minExecutors": 3,
									"spark.dynamicAllocation.maxExecutors": 3
								},
								"driverSize": "Medium",
								"numExecutors": 3
							}
						},
						{
							"name": "Defini Mensagem Error",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "insert_param_excel",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "id",
								"value": {
									"value": "@activity('insert_param_excel').error?.message",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Defini Mensagem Error",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('id'), 'Já existe uma execução em andamento para esse processo') ",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "event_error_Insert",
										"type": "SynapseNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "output_fail",
												"type": "NotebookReference"
											},
											"parameters": {
												"current_ts_new": {
													"value": {
														"value": "@{item().current_ts_p3}",
														"type": "Expression"
													},
													"type": "string"
												},
												"num_processo_new": {
													"value": {
														"value": "@{item().num_processo}",
														"type": "Expression"
													},
													"type": "string"
												},
												"cod_calendars_new": {
													"value": {
														"value": "@{item().cod_calendars}",
														"type": "Expression"
													},
													"type": "string"
												},
												"idProcess_new": {
													"value": {
														"value": "@{item().id}",
														"type": "Expression"
													},
													"type": "string"
												},
												"is_process_new": {
													"value": {
														"value": "@{item().is_process}",
														"type": "Expression"
													},
													"type": "bool"
												},
												"idUser_new": {
													"value": {
														"value": "@{item().userId}",
														"type": "Expression"
													},
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "synspjarvisprd",
												"type": "BigDataPoolReference"
											},
											"executorSize": "Medium",
											"conf": {
												"spark.dynamicAllocation.enabled": false,
												"spark.dynamicAllocation.minExecutors": 3,
												"spark.dynamicAllocation.maxExecutors": 3
											},
											"driverSize": "Medium",
											"numExecutors": 3
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"max_current_ts": {
				"type": "String"
			},
			"id": {
				"type": "String"
			},
			"op_type": {
				"type": "String"
			},
			"name": {
				"type": "String"
			},
			"userId": {
				"type": "String"
			},
			"start_time": {
				"type": "String"
			},
			"end_time": {
				"type": "String"
			},
			"status": {
				"type": "String"
			},
			"path": {
				"type": "String"
			},
			"num_processo": {
				"type": "String"
			},
			"is_process": {
				"type": "Boolean"
			},
			"newpk": {
				"type": "String"
			},
			"cod_calendars": {
				"type": "Array"
			},
			"current_ts_p3": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-04-01T04:01:51Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}